<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rental.shinhan.admin">

    <select id="selectProducts" parameterType="map" resultType="ProductVO">
        select *
        from (
        select row_number() over(order by p.product_seq desc) as num,
        p.product_seq, p.product_name, p.product_grade, p.category_seq,
        c.category_name, p.product_img, p.product_pay, p.product_date
        from product p
        join category c using (category_seq)
        <where>
            p.product_grade != 'F'
            <if test="searchKeyWord != null and searchKeyWord != ''">
                and (
                <foreach collection="splitSearchKeywords" item="keyword" open="(" separator="and" close=")">
                    (p.product_name like concat('%', #{keyword}, '%') or c.category_name like concat('%', #{keyword}, '%'))
                </foreach>
                )
            </if>
        </where>
        ) as temp
        where num between #{start} and #{end}
    </select>

    <select id="totalProducts" parameterType="map" resultType="int">
        select count(p.product_seq)
        from product p
        join category c using (category_seq)
        <where>
            p.product_grade != 'F'
            <if test="searchKeyWord != null and searchKeyWord != ''">
                and (
                <foreach collection="splitSearchKeywords" item="keyword" open="(" separator="and" close=")">
                    (p.product_name like concat('%', #{keyword}, '%') or c.category_name like concat('%', #{keyword}, '%'))
                </foreach>
                )
            </if>
        </where>
    </select>

    <select id="selectReviews" parameterType="map" resultType="ReviewVO">
        select *
        from (
        select
        row_number() over(order by s.sub_date desc) as num,
        r.review_seq,
        s.sub_seq,
        c.cust_id,
        p.product_seq,
        p.product_serial,
        p.product_name,
        r.review_content,
        r.review_rate,
        r.review_date
        from
        review r
        join subscribe s on r.sub_seq = s.sub_seq
        join product p on s.product_seq = p.product_seq
        join customer c on s.cust_seq = c.cust_seq
        <where>
            <if test="rating != 0">
                r.review_rate = #{rating}
            </if>
        </where>
        ) temp
        where num between #{start} and #{end}
    </select>

    <select id="selectCustomers" parameterType="map" resultType="com.rental.shinhan.dto.CustomerDTO">
        select *
        from (
        select row_number() over(order by cust_id) as num,
        cust_id, cust_name, cust_email, cust_phone
        from customer
        where cust_status = true
        ) as temp
        where num between #{start} and #{end}
    </select>

    <select id="totalCustomers" resultType="int">
        select count(*)
        from customer
        where cust_status = true
    </select>

    <select id="selectOrders" parameterType="map" resultType="com.rental.shinhan.dto.OrderJoinDTO">
        select *
        from (
        select row_number() over(order by s.sub_date desc) as num,
        p.product_img,
        p.product_serial,
        p.category_seq,
        c.cust_name,
        s.sub_date,
        s.sub_card,
        s.sub_total,
        s.sub_period
        from subscribe s
        join customer c on s.cust_seq = c.cust_seq
        join product p on s.product_seq = p.product_seq
        ) as temp
        where num between #{start} and #{end}
    </select>

    <select id="totalReviews" parameterType="map" resultType="int">
        select count(*)
        from review r
        join subscribe s on r.sub_seq = s.sub_seq
        join product p on s.product_seq = p.product_seq
        join customer c on s.cust_seq = c.cust_seq
        <where>
            <if test="review != null">
                r.review_rate = #{review}
            </if>
        </where>
    </select>

    <select id="totalOrders" resultType="int">
        select count(p.product_seq)
        from subscribe s
        join customer c on s.cust_seq = c.cust_seq
        join product p on s.product_seq = p.product_seq
    </select>


    <update id="deleteProduct" parameterType="int">
        update product
        set product_grade = 'F'
        where product_seq = #{product_seq}
    </update>

    <insert id="insertProduct" parameterType="ProductVO">
        insert into product
        (
        product_seq,
        category_seq,
        product_serial,
        product_name,
        product_img,
        product_detail,
        product_pay,
        product_brand,
        product_grade,
        product_date,
        product_height,
        product_weight,
        product_wh,
        product_color,
        product_features
        )
        values
        (
        nextval('product_seq'),
        #{category_seq},
        #{product_serial},
        #{product_name},
        #{product_img},
        #{product_detail},
        #{product_pay},
        #{product_brand},
        #{product_grade},
        #{product_date},
        #{product_height},
        #{product_weight},
        #{product_wh},
        #{product_color},
        #{product_features}
        )
    </insert>
</mapper>